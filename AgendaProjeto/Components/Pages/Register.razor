@page "/counter"
@using AgendaProjeto.Enumerations
@using AgendaProjeto.Models
@using AgendaProjeto.Services
@using Microsoft.FluentUI.AspNetCore.Components
@using static System.Net.Mime.MediaTypeNames
@rendermode InteractiveServer

<PageTitle>Counter</PageTitle>

<h1>Agenda</h1>

<FluentTextField Label="Nome" @bind-Value="contact.Name"></FluentTextField>
<FluentTextField Label="Número" @bind-Value="phone.Number"></FluentTextField>

<FluentButton OnClick="RegisterContact">Registrar</FluentButton>

<FluentDataGrid Items="@FilteredItems" ResizableColumns=true Pagination="@pagination" Style="height: 405px;overflow:auto;">
    <PropertyColumn Property="@(c => c.teste2)" Sortable="true" Align="Align.Center" Tooltip="true" />
    <PropertyColumn Property="@(c => c.teste)" Sortable="true" Align="Align.End" />
</FluentDataGrid>

<FluentPaginator State="@pagination" />

@code {

    public class Teste
    {
        public string teste { get; set; }
        public string teste2 { get; set; }
    }

    private Contact contact = new();
    private Phone phone = new();
    private int currentCount = 0;
    PaginationState pagination = new PaginationState { ItemsPerPage = 10 };
    IQueryable<Teste>? FilteredItems;

    protected override Task OnInitializedAsync()
    {
        FilteredItems = new List<Teste>() { new Teste() { teste = "Teste", teste2 = "Teste2" }, new Teste() { teste = "Teste1212", teste2 = "Teste1212" } }.AsQueryable();
        return base.OnInitializedAsync();
    }

    private void RegisterContact()
    {
        var teste = new AddressBookService();

        var contacts = new List<Contact>()
        {
            contact
        };

        var addressBook = new AddressBook() { UserName = "Thiago", Contacts = new() { contact } };

        teste.CreateDataFile(addressBook);
    }
}
